name: CI - Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: atelier
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d atelier"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Configure production Prisma schema
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          if [ -f prisma/schema.prod.prisma ]; then
            cp prisma/schema.prod.prisma prisma/schema.prisma
          fi

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            pg_isready -h localhost -p 5432 -U postgres && break
            sleep 1
          done

      - name: Generate Prisma client
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: npx prisma generate

      - name: Build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
        run: npm run build
